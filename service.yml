apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app
  labels:
    app: sample-app
spec:
  replicas: 2
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      containers:
        - image: 651625262782.dkr.ecr.us-east-1.amazonaws.com/mario-sample:test1
          name: sample-app
          resources:
            limits:
              cpu: "256m"
              memory: "256M"
            requests:
              cpu: "128m"
              memory: "128M"
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 2
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: "sample-app"
  namespace: "default"
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app: "sample-app"

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "sample-app"
  namespace: "default"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-path: /health
  labels:
    app: sample-app
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: "sample-app"
              servicePort: 80
